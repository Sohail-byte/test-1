{
  "resolvedId": "C:/Users/XFXRe/Desktop/Portfolio/node_modules/perfect-debounce/dist/index.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "const DEBOUNCE_DEFAULTS = {\n  trailing: true\n};\nfunction debounce(fn, wait = 25, options = {}) {\n  options = { ...DEBOUNCE_DEFAULTS, ...options };\n  if (!Number.isFinite(wait)) {\n    throw new TypeError(\"Expected `wait` to be a finite number\");\n  }\n  let leadingValue;\n  let timeout;\n  let resolveList = [];\n  let currentPromise;\n  let trailingArgs;\n  const applyFn = (_this, args) => {\n    currentPromise = _applyPromised(fn, _this, args);\n    currentPromise.finally(() => {\n      currentPromise = null;\n      if (options.trailing && trailingArgs && !timeout) {\n        const promise = applyFn(_this, trailingArgs);\n        trailingArgs = null;\n        return promise;\n      }\n    });\n    return currentPromise;\n  };\n  return function(...args) {\n    if (currentPromise) {\n      if (options.trailing) {\n        trailingArgs = args;\n      }\n      return currentPromise;\n    }\n    return new Promise((resolve) => {\n      const shouldCallNow = !timeout && options.leading;\n      clearTimeout(timeout);\n      timeout = setTimeout(() => {\n        timeout = null;\n        const promise = options.leading ? leadingValue : applyFn(this, args);\n        for (const _resolve of resolveList) {\n          _resolve(promise);\n        }\n        resolveList = [];\n      }, wait);\n      if (shouldCallNow) {\n        leadingValue = applyFn(this, args);\n        resolve(leadingValue);\n      } else {\n        resolveList.push(resolve);\n      }\n    });\n  };\n}\nasync function _applyPromised(fn, _this, args) {\n  return await fn.apply(_this, args);\n}\n\nexport { debounce };\n",
      "start": 1718972211467,
      "end": 1718972211527,
      "sourcemaps": null
    },
    {
      "name": "vite:css",
      "start": 1718972211527,
      "end": 1718972211527,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1718972211527,
      "end": 1718972211527,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1718972211527,
      "end": 1718972211527,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1718972211527,
      "end": 1718972211527,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1718972211527,
      "end": 1718972211527,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1718972211531,
      "end": 1718972211531,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1718972211531,
      "end": 1718972211531,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1718972211531,
      "end": 1718972211531,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1718972211531,
      "end": 1718972211531,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1718972211531,
      "end": 1718972211531,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1718972211532,
      "end": 1718972211532,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1718972211532,
      "end": 1718972211532,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1718972211532,
      "end": 1718972211532,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1718972211532,
      "end": 1718972211532,
      "order": "normal"
    }
  ]
}
